@model DevIo.App.Models.ProviderViewModel

@{
    ViewData["Title"] = "Detail: " + Model.Name;
    double price = 0;
}
<div class="container">
    <h3 class="mt-4">@ViewData["Title"]</h3>
    <hr class="my-4" />
    <div class="row jumbotron">
        <div class="col-md-4">
            <h4 class="text-muted">Information</h4>
            <p class="text-muted"><samp class="font-weight-bolder">Name: </samp>@Model.Name</p>
            <p class="text-muted"><samp class="font-weight-bolder">Document: </samp>@Model.Document</p>
            <p class="text-muted"><samp class="font-weight-bolder">Is Active: </samp>@Model.IsActive</p>
            <p class="text-muted"><samp class="font-weight-bolder">Type: </samp>@Model.ProviderType</p>
        </div>
        <div class="col-md-4">
            <h4 class="text-muted">Address</h4>
            <p class="text-muted"><samp class="font-weight-bolder">Street: </samp>@Model.Address.Street, @Model.Address.Number</p>
            <p class="text-muted"><samp class="font-weight-bolder">District: </samp>@Model.Address.District</p>
            <p class="text-muted"><samp class="font-weight-bolder">City: </samp>@Model.Address.City</p>
            <p class="text-muted"><samp class="font-weight-bolder">State: </samp>@Model.Address.State</p>
        </div>
        <div class="col-md-4">
            <h4 class="text-muted">Products: (@Model.Products.Count())</h4>
            @foreach (var product in Model.Products)
            {

                price += Convert.ToDouble(product.Price);
            }
            <p class="text-muted"><samp class="font-weight-bolder">Amount: </samp>R$ @price</p>
        </div>
    </div>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-info">Edit</a>
    <a asp-action="Index" class="btn btn-secondary btn-sm">Back to List</a>
</div>
